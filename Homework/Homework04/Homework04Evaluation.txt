
Homework03 Evaluation
======================

scores:
=============================
OddEven-Sorter.java
   oddEvenSort implemented       [0.5 pt.]
   compiles                      [1 pt.]
   works as advertised           [0.5 pt.]

SimonGame.java
   randomized array              [1 pt.]
   display/erase sequences       [1 pt.]
   check user's guess            [1 pt.]
   increment letter count        [1 pt.]
   play again on bad entry       [1 pt.]
   compiles                      [1 pt.]
   works as advertised           [0 pt.]

HuffmanCoding.java
   count character occurrences   [1 pt.]
   queue to build tree           [1 pt.]
   tree constructed correctly    [1 pt.]
   message encoded correctly     [1 pt.]
   message decoded correctly     [1 pt.]
   compiles                      [1 pt.]
   works as advertised           [0.5 pt.]

Coding style                     [1 pt.]
Tests written for all classes    [1 pt.]
Headers in all files             [1 pt.]

Total credit 20 points

You got 17.5 out of 20 which is 87.50% which is a B-plus

===============================================
Pretty good work on this assignment!

Here are a couple of observations and comments:

ODD-EVEN SORT
I'm not sure you have the idea of odd-even sort.  For this one you don't do
the evens and odds into separate lists.  What you do is execute a sort pass
on all the even-indexed values in the list, then all the odd-indexed values
in the list, repeating until the list is sorted.  You swap any that are out
of order on each pass, just like with bubble sort.  You will need a while()
loop with two inner for loops to do this.  Additionally, you also must keep
track of whether the list is sorted using a boolan which is set to true at
the top of the while() loop; this is set to false every time you make a swap.

SIMON SAYS GAME
This got pretty close!  You are putting up letters, but aren't waiting long
enough for the player to repeat.  You are also putting up only single-letter
sequences, which isn't quite how the game works.  The user never gets any
chance to input a series of letters so will always fail.  I like the idea of
keeping score, and it's hilarious that Stephen is the top scorer with... um,
10,000,000,000?!  I've never even seen pin-ball machines with score THAT high!

HUFFMAN CODING
Wow, THIS is cool!  Actually drawing the tree wasn't in the specification,
but you did a beautiful job there!  Not sure about the hard-coded message you
have in there ~ that was supposed to be input from the user.  You did pick a
phrase with a lot of repeat letters, so that shows the encode/decode things
work.  Nice job there!

It has been a great pleasure having you all in class this semester, and I'm
looking forward to seeing you all around campus in the coming years!
